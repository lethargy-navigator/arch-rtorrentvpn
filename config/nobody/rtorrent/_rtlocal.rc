### Local settings include file #############################################
#                                                              vim: ft=dosini
#
# This is installed by Ansible, but gets never overwritten,
# unless you do so in a custom playbook.
#
# Add anything of your own here, or remove the examples you do not need.
# A better way to add your own *additional* settings is to create new
# files in the "rtorrent.d" directory.

# Default directory to save the downloaded torrents.
#
#execute = {/bin/bash,-c,mkdir -p /downloads/incomplete}
directory.default.set = /downloads/incomplete/

# install crontab
#execute = {/bin/bash,-c,echo "$CRON_ENTRIES" | crontab -}
execute = {/bin/bash,-c,crontab /rtbase/crontab}

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
#
execute = {/bin/bash,-c,mkdir -p /rtbase/session}
session.path.set = /rtbase/session/

# Throttle settings
throttle.global_up.max_rate.set_kb = 0
throttle.global_down.max_rate.set_kb = 0

# Tracker settings
dht.mode.set = disable
protocol.pex.set = no
trackers.use_udp.set = no

encryption = allow_incoming,try_outgoing,enable_retry

#network.scgi.open_port = 0.0.0.0:5099

system.umask.set = 0022

#port_range = 21167-21167
port_range = 59160-59160

# Start opening ports at a random position within the port range.
port_random = no

# Reduce retention period of uncompressed logs
#pyro.log_archival.days.set = 1

########## Performance settings from https://github.com/rakshasa/rtorrent/wiki/Performance-Tuning

# Maximum number of simultaneous downloads and uploads slots (global slots!) (`max_downloads_global`, `max_uploads_global`)
throttle.max_downloads.global.set = 600
throttle.max_uploads.global.set   = 600

# Maximum and minimum number of peers to connect to per torrent while downloading (`min_peers`, `max_peers`) Default: `100` and `200` respectively
throttle.min_peers.normal.set = 199
throttle.max_peers.normal.set = 200

# Same as above but for seeding completed torrents (seeds per torrent), `-1` for same as downloading (`min_peers_seed`, `max_peers_seed`) Default: `-1` for both
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1

# Maximum number of simultaneous downloads and uploads slots per torrent (`max_uploads`) Default: `50` for both
throttle.max_downloads.set = 100
throttle.max_uploads.set = 100

# Set the numwant field sent to the tracker, which indicates how many peers we want.
#  A negative value disables this feature. Default: `-1` (`tracker_numwant`)
trackers.numwant.set = 200

# Set the max amount of memory address space used to mapping file chunks. This refers to memory mapping, not
#  physical memory allocation. Default: `1GB` (`max_memory_usage`)
# This may also be set using ulimit -m where 3/4 will be allocated to file chunks.
pieces.memory.max.set = 2048M

# Maximum number of connections rtorrent can accept/make (`sockets`)
network.max_open_sockets.set = 999

# Maximum number of open files rtorrent can keep open (you have to modify the system wide settings with ulimit!) (`set_max_open_files`)
network.max_open_files.set = 600

# Maximum number of simultaneous HTTP request (used by announce or scrape requests) Default: `32` (`set_max_open_http`)
network.http.max_open.set = 199

# Send and receive buffer size for socket. Disabled by default (`0`), this means the default is used by OS
#  (you have to modify the system wide settings!) (`send_buffer_size`, `receive_buffer_size`)
# Increasing buffer sizes may help reduce disk seeking, connection polling as more data is buffered each time
#  the socket is written to. It will result higher memory usage (not visible in rtorrent process!).
network.receive_buffer.size.set =  4M
network.send_buffer.size.set    = 12M

# Preloading a piece of a file. Default: `0` Possible values: `0` (Off) , `1` (Madvise) , `2` (Direct paging).
pieces.preload.type.set = 2
#pieces.preload.min_size.set = 262144
#pieces.preload.min_rate.set = 5120

# TOS of peer connections. Default: `throughput`. If the option is set to `default` then the system default TOS
#  is used. A hex value may be used for non-standard settings.  (`tos`)
# Possible values: `[default|lowdelay|throughput|reliability|mincost]` or a hex value.
#network.tos.set = throughput

# CURL options to add support for nonofficial SSL trackers and peers
network.http.ssl_verify_host.set = 0
network.http.ssl_verify_peer.set = 0

# CURL option to lower DNS timeout. Default: `60`.
network.http.dns_cache_timeout.set = 25

# Max packet size using xmlrpc. Default: `524288` (xmlrpc_size_limit)
network.xmlrpc.size_limit.set = 10M

# Enable XMLRPC logging
##pyro.log.xmlrpc.enabled.set = 1

# General logging
#
#   Levels = critical error warn notice info debug
#   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
#
# The 'log' channel used here is defined in "rtorrent.d/15-logging.rc"!
#log.add_output = "info", "log"
##log.add_output = "tracker_debug", "log"

### END of local settings ###################################################
